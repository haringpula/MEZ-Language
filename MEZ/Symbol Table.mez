#1 $~<PPL Final Project>~	:Comment
#2 $signed	:STRG_CLASS_SPECIFIER
#2 $Str	:DATA_TYPE
#2 $a	:id
#2 $=	:Assignment_Op
#2 $'d'	:character_Const
#2 $;	:;
#3 $Num	:DATA_TYPE
#3 $b	:id
#3 $=	:Assignment_Op
#3 $"wrong"	:string_Const
#3 $;	:;
#4 $unsigned	:STRG_CLASS_SPECIFIER
#4 $Num	:DATA_TYPE
#4 $re	:id
#4 $[	:[
#4 $3	:integer_Const
#4 $]	:]
#4 $,	:,
#4 $one	:id
#4 $;	:;
#5 $Num	:DATA_TYPE
#5 $b	:id
#5 $,	:,
#5 $c	:id
#5 $;	:;
#6 $register	:STRG_CLASS_SPECIFIER
#6 $Str	:DATA_TYPE
#6 $lool	:id
#6 $;	:;
#7 $Str	:DATA_TYPE
#7 $nonsense	:id
#7 $;	:;
#8 $auto	:STRG_CLASS_SPECIFIER
#8 $Num	:DATA_TYPE
#8 $nu	:id
#8 $;	:;
#10 $re	:id
#10 $=	:Assignment_Op
#10 ${	:{
#10 $23	:integer_Const
#10 $,	:,
#10 $4	:integer_Const
#10 $,	:,
#10 $11	:integer_Const
#10 $}	:}
#10 $;	:;
#11 $c	:id
#11 $=	:Assignment_Op
#11 $2	:integer_Const
#11 $-	:Arithmetic_Op
#11 $3	:integer_Const
#11 $;	:;
#12 $c	:id
#12 $=	:Assignment_Op
#12 $"mismatch"	:string_Const
#12 $;	:;
#13 $no	:id
#13 $=	:Assignment_Op
#13 $3.33	:float_Const
#13 $;	:;
#15 $scan	:scan
#15 $(	:(
#15 $Str	:DATA_TYPE
#15 $,	:,
#15 $lool	:id
#15 $)	:)
#15 $;	:;
#16 $scan	:scan
#16 $(	:(
#16 $Str	:DATA_TYPE
#16 $,	:,
#16 $notha	:id
#16 $)	:)
#16 $;	:;
#18 $if	:if
#18 $(	:(
#18 $a	:id
#18 $!=	:Boolean_Op
#18 $false	:boolean_Const
#18 $)	:)
#18 ${	:{
#19 $print	:print
#19 $(	:(
#19 $"loop"	:string_Const
#19 $+	:Arithmetic_Op
#19 $b	:id
#19 $)	:)
#19 $;	:;
#20 $}	:}
#22 $if	:if
#22 $(	:(
#22 $nope	:id
#22 $>	:Boolean_Op
#22 $2	:integer_Const
#22 $)	:)
#22 ${	:{
#23 $print	:print
#23 $(	:(
#23 $"pool"	:string_Const
#23 $+	:Arithmetic_Op
#23 $nana	:id
#23 $)	:)
#23 $;	:;
#24 $}	:}
#24 $else	:else
#24 $if	:if
#24 $(	:(
#24 $b	:id
#24 $<=	:Boolean_Op
#24 $3	:integer_Const
#24 $)	:)
#24 ${	:{
#25 $scan	:scan
#25 $(	:(
#25 $Num	:DATA_TYPE
#25 $,	:,
#25 $nonsense	:id
#25 $)	:)
#25 $;	:;
#26 $}	:}
#28 $c	:id
#28 $=	:Assignment_Op
#28 $(	:(
#28 $4	:integer_Const
#28 $*	:Arithmetic_Op
#28 $2	:integer_Const
#28 $)	:)
#28 $/	:Arithmetic_Op
#28 $(	:(
#28 $10	:integer_Const
#28 $%	:Arithmetic_Op
#28 $3	:integer_Const
#28 $)	:)
#28 $;	:;
#30 $for	:for
#30 $(	:(
#30 $i	:id
#30 $=	:Assignment_Op
#30 $1	:integer_Const
#30 $;	:;
#30 $(	:(
#30 $b	:id
#30 $<	:Boolean_Op
#30 $1	:integer_Const
#30 $)	:)
#30 $||	:Boolean_Op
#30 $(	:(
#30 $b	:id
#30 $>	:Boolean_Op
#30 $4	:integer_Const
#30 $)	:)
#30 $;	:;
#30 $b	:id
#30 $=	:Assignment_Op
#30 $b	:id
#30 $+	:Arithmetic_Op
#30 $"b"	:string_Const
#30 $)	:)
#30 ${	:{
#32 $break	:break
#32 $+	:Arithmetic_Op
#32 $1	:integer_Const
#32 $;	:;
#33 $}	:}
#35 $S@dboi	:Invalid_Input
#35 $>=	:Boolean_Op
#35 $(	:(
#35 $true	:boolean_Const
#35 $//	:Arithmetic_Op
#35 $null	:null
#35 $)	:)
#35 $^	:Arithmetic_Op
#35 $2	:integer_Const
#35 $&&	:Boolean_Op
#35 $auto	:STRG_CLASS_SPECIFIER
#35 $!	:Boolean_Op
#35 $a	:id
#35 $==	:Boolean_Op
#35 $;	:;
